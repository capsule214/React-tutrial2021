{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","renderSquare","Game","state","history","Array","fill","stepNumber","xIsNext","this","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNASA,SAASA,EAAQC,GACf,OACE,wBACEC,UAAU,SACVC,QAAUF,EAAME,QAFlB,SAGGF,EAAMG,QAKb,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAIT,SAASG,EAAOZ,GAEd,IAAMa,EAAe,SAACN,GACpB,OACE,cAACR,EAAD,CACEI,MAAOH,EAAMK,QAAQE,GACrBL,QAAS,kBAAMF,EAAME,QAAQK,OAKnC,OACE,gCACE,sBAAKN,UAAU,YAAf,UACGY,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKZ,UAAU,YAAf,UACGY,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKZ,UAAU,YAAf,UACGY,EAAa,GACbA,EAAa,GACbA,EAAa,S,IAMhBC,E,kDACJ,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXC,QAAS,CAAC,CACRX,QAASY,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,+CAWnB,SAAYb,GACV,IAAMS,EAAUK,KAAKN,MAAMC,QAAQM,MAAM,EAAGD,KAAKN,MAAMI,WAAa,GAE9Dd,EADUW,EAAQA,EAAQR,OAAS,GACjBH,QAAQiB,QAC7BlB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKc,KAAKN,MAAMK,QAAU,IAAM,IACxCC,KAAKE,SAAS,CACZP,QAASA,EAAQQ,OAAO,CAAC,CACvBnB,QAASA,KAEXc,WAAYH,EAAQR,OACpBY,SAAUC,KAAKN,MAAMK,a,oBAIzB,SAAOK,GACLJ,KAAKE,SAAS,CACZJ,WAAYM,EACZL,QAAUK,EAAO,IAAO,M,oBAG5B,WAAU,IAiBJC,EAjBG,OACDV,EAAUK,KAAKN,MAAMC,QACrBW,EAAUX,EAAQK,KAAKN,MAAMI,YAC7BS,EAASxB,EAAgBuB,EAAQtB,SAEjCwB,EAAQb,EAAQc,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,6BACE,wBAAQ7B,QAAS,kBAAM,EAAK+B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OAJEL,EADCE,EACQ,WAAaA,EAEb,iBAAmBP,KAAKN,MAAMK,QAAU,IAAM,KAGvD,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACW,EAAD,CACEP,QAASsB,EAAQtB,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK2B,YAAY3B,QAGrC,sBAAKN,UAAU,YAAf,UACE,8BAAMyB,IACN,6BAAKG,c,GApEIM,IAAMC,WA6EzBC,IAASC,OACP,cAACxB,EAAD,IACAyB,SAASC,eAAe,W","file":"static/js/main.591c93be.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/**\n * 独自のstateを持たないコンポーネントは関数コンポーネントにできる\n * @param {*} props \n * @returns \n */\nfunction Square (props) {\n  return (\n    <button\n      className=\"square\"\n      onClick={ props.onClick }>\n      {props.value}\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nfunction Board (props){\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        value={props.squares[i]}\n        onClick={() => props.onClick(i)}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if(calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n      return(\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n\n    let status;\n    if(winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}